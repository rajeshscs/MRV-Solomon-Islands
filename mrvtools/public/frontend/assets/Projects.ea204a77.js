var i=(m,e,r)=>new Promise((t,s)=>{var n=a=>{try{o(r.next(a))}catch(c){s(c)}},l=a=>{try{o(r.throw(a))}catch(c){s(c)}},o=a=>a.done?t(a.value):Promise.resolve(a.value).then(n,l);o((r=r.apply(m,e)).next())});import{F as p}from"./Footer.c9e43526.js";import{H as f}from"./Header.3792c03b.js";import{P as u}from"./ProjectComponent.d275c314.js";import{f as g,g as v,c as _,b as d,F as h,j as w,o as F}from"./index.153a46af.js";const j={setup(m){const e=g([]),r=()=>i(this,null,function*(){try{const o=yield w.get("http://192.168.0.183:8189/api/method/mrvtools.mrvtools.doctype.mrvfrontend.mrvfrontend.get_all");if(o.status===200)e.value=o.data;else throw new Error("Network response was not ok")}catch(o){console.error("Error:",o)}var t=e,s=t.heading,n=e._rawValue.message.child_table_data;for(var l of n)l.image?console.log("item",l.image):console.log("no item found");console.log("response",n),console.log("response",t),console.log("response",s)});return v(()=>{r()}),(t,s)=>(F(),_(h,null,[d(f),d(u,{data:e.value},null,8,["data"]),d(p,{data:e.value},null,8,["data"])],64))}};export{j as default};
