var d=(l,r,e)=>new Promise((o,a)=>{var m=t=>{try{s(e.next(t))}catch(n){a(n)}},p=t=>{try{s(e.throw(t))}catch(n){a(n)}},s=t=>t.done?o(t.value):Promise.resolve(t.value).then(m,p);s((e=e.apply(l,r)).next())});import{F as u}from"./Footer.c9e43526.js";import{H as f}from"./Header.3792c03b.js";import{k as i}from"./KnowledgeResource.92f50ab7.js";import{f as v,g as _,c as h,b as c,j as k,o as w}from"./index.153a46af.js";const F={setup(l){const r=v([]),e=()=>d(this,null,function*(){try{const o=yield k.get("http://192.168.0.183:8189/api/method/mrvtools.mrvtools.doctype.mrvfrontend.mrvfrontend.get_all");if(o.status===200)r.value=o.data;else throw Error("Network response was not ok")}catch(o){console.error("Error:",o)}});return _(()=>{e()}),(o,a)=>(w(),h("div",null,[c(f),c(i,{data:r.value},null,8,["data"]),c(u,{data:r.value},null,8,["data"])]))}};export{F as default};
